#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };

        volume_up_down: behavior_sensor_rotate_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        scalling_down_up: scalling_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp LG(MINUS)>, <&kp LS(LG(EQUAL))>;

            tap-ms = <20>;
            label = "SCALLING_DOWN_UP";
        };

        bright_down_up: bright_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_BRI_DEC>, <&kp LS(LG(C_BRI_UP))>;

            tap-ms = <20>;
            label = "BRIGHT_DOWN_UP";
        };
    };

    macros {
        word: word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp RS(T) &kp K &kp Y &kp T &kp M &kp N &kp N5 &kp NUMBER_2 &kp NUMBER_4 &kp N8 &kp ENTER>;
            label = "WORD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_down_up>, <&scroll_up_down>;

            bindings = <
&kp ESCAPE    &mt SINGLE_QUOTE Q  &mt DOUBLE_QUOTES W              &kp E             &kp R        &kp T                     &kp Y                   &mt UNDERSCORE U  &kp I                &kp O             &mt PERCENT P         &mt EQUAL MINUS
&kp TAB       &mt AT A            &mt HASH S                       &mt DOLLAR D      &kp F        &kp G                     &mt QUESTION H          &kp J             &kp K                &kp L             &mt2 LEFT_BRACE LBKT  &mt2 RIGHT_BRACE RBKT
&kp LSHFT     &kp Z               &kp X                            &kp C             &kp V        &mt EXCLAMATION B         &mt AMPERSAND N         &kp M             &mt SEMICOLON COMMA  &mt COLON PERIOD  &mt2 SLASH UP_ARROW   &mt BSLH PIPE
&kp LEFT_ALT  &kp LCTRL           &mt LS(LG(N5)) LG(LS(NUMBER_4))  &kp LEFT_COMMAND  &lt 1 SPACE  &lt TERTIARY_LAYER LANG2  &lt SYSTEM_LAYER LANG1  &kp ENTER         &kp BACKSPACE        &kp LEFT          &kp DOWN              &kp RIGHT
                                  &allow_end                       &allow_pagedown   &allow_home  &allow_pageup             &allow_pageup           &allow_home       &allow_pagedown      &allow_end
            >;
        };

        SECONDARY_LAYER {
            display-name = "numpad_layer";
            sensor-bindings = <&scroll_right_left>, <&scroll_left_right>;

            bindings = <
&kp ESCAPE      &kp NUMBER_1   &kp NUMBER_2          &kp NUMBER_3  &kp NUMBER_4           &kp NUMBER_5      &kp NUMBER_6  &kp N7         &kp N8         &kp N9            &kp N0        &mt EQUAL MINUS
&kp TAB         &kp NUMBER_6   &kp NUMBER_7          &kp NUMBER_8  &kp NUMBER_9           &kp NUMBER_0      &kp PLUS      &kp MINUS      &kp ASTERISK   &kp SLASH         &kp EQUAL     &trans
&kp LEFT_SHIFT  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &trans        &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp COLON     &kp SEMICOLON  &kp LESS_THAN  &kp GREATER_THAN  &kp UP_ARROW  &trans
&trans          &trans         &trans                &trans        &trans                 &trans            &trans        &kp ENTER      &kp BACKSPACE  &kp LEFT_ARROW    &kp DOWN      &kp RIGHT
                               &trans                &trans        &trans                 &trans            &trans        &trans         &trans         &trans
            >;
        };

        WINDOW_LAYER {
            display-name = "window_layer";
            bindings = <
&word        &trans  &trans  &trans  &trans  &kp LC(UP_ARROW)   &trans            &trans        &trans        &trans         &trans  &trans
&kp LG(TAB)  &trans  &trans  &trans  &trans  &kp LC(DOWN)       &trans            &trans        &trans        &trans         &trans  &trans
&trans       &trans  &trans  &trans  &trans  &kp LG(LA(SPACE))  &trans            &trans        &trans        &trans         &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans             &trans            &trans        &trans        &trans         &trans  &trans
                     &trans  &trans  &trans  &trans             &kp LC(UP_ARROW)  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(RIGHT)
            >;

            sensor-bindings = <&scalling_down_up>;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&bright_down_up>, <&volume_up_down>;

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans        &trans        &trans        &bootloader   &bt BT_CLR_ALL  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans          &trans        &trans          &trans
                      &trans        &trans        &trans        &trans          &trans        &trans        &trans          &trans
            >;
        };

        MOUSE_R_LAYER {
            display-name = "right_mouse_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kp LG(Z)             &kp LG(X)  &kp LG(C)  &kp LG(V)              &kp LG(LA(V))    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LEFT_BRACKET)  &mkp LCLK  &mkp RCLK  &kp LG(RIGHT_BRACKET)  &mkp RCLK        &mo SCROLL_R_LAYER
&trans  &trans  &trans  &trans  &trans  &trans  &kp LG(R)             &trans     &mkp MB3   &trans                 &allow_pageup    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans     &trans     &trans                 &allow_pagedown  &trans
                &trans  &trans  &trans  &trans  &trans                &trans     &trans     &trans
            >;
        };

        SCROLL_R_LAYER {
            display-name = "right_mouse_scroll_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE_L_LAYER {
            display-name = "right_mouse_layer";
            bindings = <
&trans              &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&mo SCROLL_R_LAYER  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans     &mkp MB5   &mkp MB4   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                               &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "right_mouse_scroll_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
